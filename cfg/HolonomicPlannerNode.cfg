#!/usr/bin/env python
PACKAGE = 'docking'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("robot_frame",    str_t,    0, "Name of robot frame",  "base_link")
gen.add("dock_frame",    str_t,    0, "Name of dock frame",  "dock_truth")
gen.add("dock_pose_topic",    str_t,    0, "Topic of calculated dock pose",  "docking/dock_pose")
gen.add("dock_gazebo_pose_topic",    str_t,    0, "Topic of gazebo truth dock pose",  "dock_pose_gazebo")
gen.add("use_calculated_pose",    bool_t,    0, "Switch between gazebo truth pose or calculated pose",  True)
gen.add("goal_dist_tolerance", double_t, 0, "Max Goal Distance Error Tolerance (m)", 0.03, 0.01, 1)
gen.add("goal_orientation_tolerance", double_t, 0, "Max Goal Orientation Error Tolerance (rad)", 0.1, 0.01, 1)
gen.add("omega_max", double_t, 0, "Max Rotational Velocity", 0.3, 0, 2)
gen.add("kp_translate", double_t, 0, "Proportional Gain for Translation", 1, 0,   100)
gen.add("ki_translate", double_t, 0, "Integral Gain for Translation", 1, 0,   100)
gen.add("kd_translate", double_t, 0, "Derivative Gain for Translation", 1, 0,   100)
gen.add("kp_rotate", double_t, 0, "Proportional Gain for Rotation", 1, 0,   100)
gen.add("ki_rotate", double_t, 0, "Integral Gain for Rotation", 1, 0,   100)
gen.add("kd_rotate", double_t, 0, "Derivative Gain for Rotation", 1, 0,   100)
gen.add("control_frequency", double_t, 0, "Frequency of control", 10, 1, 50)

exit(gen.generate(PACKAGE, "docking", "HolonomicPlannerNode"))
